<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4"
      main_tree_to_execute="BlueyeAutonomyControl">
  <include path="UnDocking.xml"/>

  <include path="Transit_1.xml"/>

  <include path="Transit_2.xml"/>

  <include path="PipeLineInspection.xml"/>

  <include path="WreckageInspection.xml"/>

  <include path="Homing.xml"/>

  <include path="Docking.xml"/>

  <include path="SystemMonitor.xml"/>

  <BehaviorTree ID="BlueyeAutonomyControl">
    <ReactiveFallback>
      <Sequence name="emergency_handling">
        <CheckBlackboard key="emergency_triggered"
                         expected_value="true"/>
        <SetBlackboard value="Emergency triggered - returning to dock"
                       output_key="status_message"/>
        <PublishState state="6"/>
        <SubTree ID="Homing"/>
        <PublishState state="7"/>
        <SubTree ID="Docking"/>
        <SetBlackboard value="false"
                       output_key="emergency_triggered"/>
      </Sequence>
      <Sequence name="normal_mission">
        <Fallback name="init_fallback">
          <CheckBlackboard key="mission_initialized"
                           expected_value="true"/>
          <Sequence name="initialize_mission">
            <SetBlackboard value="false"
                           output_key="emergency_triggered"/>
            <SetBlackboard value="true"
                           output_key="mission_requires_sonar"/>
            <SetBlackboard value="true"
                           output_key="mission_requires_camera"/>
            <SetBlackboard value="true"
                           output_key="mission_initialized"/>
          </Sequence>
        </Fallback>
        <Parallel failure_count="1"
                  success_count="-1">
          <Sequence name="monitoring_sequence">
            <Fallback name="check_sensors">
              <Sequence name="sensor_checks">
                <CheckSonarStatus name="check_sonar"
                                  timeout_seconds="5.0"/>
                <CheckCameraStatus name="check_camera"
                                   timeout_seconds="5.0"/>
                <Inverter>
                  <CheckBatteryLevel/>
                </Inverter>
                <SystemWatchdog name="system_watchdog"
                                max_failures="5"
                                failing_topics=""/>
              </Sequence>
              <Sequence name="handle_sensor_failure">
                <SetBlackboard value="true"
                               output_key="emergency_triggered"/>
                <SetBlackboard value="Sensor failure detected"
                               output_key="failure_reason"/>
                <AlwaysSuccess/>
              </Sequence>
            </Fallback>
            <Wait duration="1"/>
          </Sequence>
          <Sequence name="complete_mission">
            <PublishState state="1"/>
            <SubTree ID="UnDocking"/>
            <PublishState state="2"/>
            <SubTree ID="Transit_1"/>
            <PublishState state="3"/>
            <SubTree ID="PipeLineInspection"/>
            <PublishState state="4"/>
            <SubTree ID="Transit_2"/>
            <PublishState state="5"/>
            <SubTree ID="WreckageInspection"/>
            <PublishState state="6"/>
            <SubTree ID="Homing"/>
            <PublishState state="7"/>
            <SubTree ID="Docking"/>
            <SetBlackboard value="true"
                           output_key="mission_completed"/>
          </Sequence>
        </Parallel>
      </Sequence>
    </ReactiveFallback>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="CheckBatteryLevel"
            editable="true"/>
    <Condition ID="CheckBlackboard">
      <input_port name="key"
                  type="String">Key to check</input_port>
      <input_port name="expected_value"
                  type="String">Expected value</input_port>
    </Condition>
    <Condition ID="CheckCameraStatus">
      <input_port name="timeout_seconds"
                  type="Double">Maximum time without messages before failure</input_port>
    </Condition>
    <Condition ID="CheckSonarStatus">
      <input_port name="timeout_seconds"
                  type="Double">Maximum time without messages before failure</input_port>
    </Condition>
    <Action ID="PublishState">
      <input_port name="state"
                  type="Int">Mission state ID</input_port>
    </Action>
    <Condition ID="SystemWatchdog">
      <input_port name="max_failures"
                  type="Int">Maximum consecutive failures before logging warning</input_port>
      <output_port name="failing_topics"
                   type="String">List of failing topics</output_port>
    </Condition>
    <Action ID="Wait">
      <input_port name="duration"
                  type="Int">Duration in seconds</input_port>
    </Action>
  </TreeNodesModel>

</root>
